var ho;
(function (ho) {
    var classloader;
    (function (classloader) {
        (function (LoadType) {
            LoadType[LoadType["SCRIPT"] = 0] = "SCRIPT";
            LoadType[LoadType["FUNCTION"] = 1] = "FUNCTION";
            LoadType[LoadType["EVAL"] = 2] = "EVAL";
        })(classloader.LoadType || (classloader.LoadType = {}));
        var LoadType = classloader.LoadType;
        classloader.mapping = {};
        var ClassLoader = (function () {
            function ClassLoader(c) {
                this.conf = {};
                this.cache = {};
                this.conf = new classloader.LoaderConfig(c);
            }
            ClassLoader.prototype.load = function (arg) {
                switch (this.conf.loadType) {
                    case LoadType.SCRIPT:
                        return this.load_script(arg);
                        break;
                    case LoadType.FUNCTION:
                        return this.load_function(arg);
                        break;
                    case LoadType.EVAL:
                        return this.load_eval(arg);
                        break;
                }
            };
            ClassLoader.prototype.load_script = function (arg) {
                var _this = this;
                return new ho.promise.Promise(function (resolve, reject) {
                    var src = arg.url;
                    var script = document.createElement('script');
                    script.onload = function () {
                        if (typeof this.get(name) === 'function')
                            resolve(this.get(name));
                        else
                            reject("Error while loading Store " + name);
                    }.bind(_this);
                    script.src = src;
                    document.getElementsByTagName('head')[0].appendChild(script);
                });
            };
            ClassLoader.prototype.load_function = function (arg) {
            };
            ClassLoader.prototype.load_eval = function (arg) {
            };
            ClassLoader.prototype.getParentName = function (url) {
            };
            ClassLoader.prototype.parseParentFromSource = function (src) {
            };
            ClassLoader.prototype.resolveUrl = function (name) {
                if (!!classloader.mapping[name])
                    return classloader.mapping[name];
                if (this.conf.userDir) {
                    name += '.' + name.split('.').pop();
                }
                name = name.split('.').join('/');
                return this.useMin ?
                    "stores/" + name + ".min.js" :
                    "stores/" + name + ".js";
            };
            ClassLoader.prototype.exists = function (name) {
                return !!this.cache[name];
            };
            return ClassLoader;
        })();
        classloader.ClassLoader = ClassLoader;
    })(classloader = ho.classloader || (ho.classloader = {}));
})(ho || (ho = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3Nsb2FkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9jbGFzc2xvYWRlci9jbGFzc2xvYWRlci50cyJdLCJuYW1lcyI6WyJobyIsImhvLmNsYXNzbG9hZGVyIiwiaG8uY2xhc3Nsb2FkZXIuTG9hZFR5cGUiLCJoby5jbGFzc2xvYWRlci5DbGFzc0xvYWRlciIsImhvLmNsYXNzbG9hZGVyLkNsYXNzTG9hZGVyLmNvbnN0cnVjdG9yIiwiaG8uY2xhc3Nsb2FkZXIuQ2xhc3NMb2FkZXIubG9hZCIsImhvLmNsYXNzbG9hZGVyLkNsYXNzTG9hZGVyLmxvYWRfc2NyaXB0IiwiaG8uY2xhc3Nsb2FkZXIuQ2xhc3NMb2FkZXIubG9hZF9mdW5jdGlvbiIsImhvLmNsYXNzbG9hZGVyLkNsYXNzTG9hZGVyLmxvYWRfZXZhbCIsImhvLmNsYXNzbG9hZGVyLkNsYXNzTG9hZGVyLmdldFBhcmVudE5hbWUiLCJoby5jbGFzc2xvYWRlci5DbGFzc0xvYWRlci5wYXJzZVBhcmVudEZyb21Tb3VyY2UiLCJoby5jbGFzc2xvYWRlci5DbGFzc0xvYWRlci5yZXNvbHZlVXJsIiwiaG8uY2xhc3Nsb2FkZXIuQ2xhc3NMb2FkZXIuZXhpc3RzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLEVBQUUsQ0FxRlI7QUFyRkQsV0FBTyxFQUFFO0lBQUNBLElBQUFBLFdBQVdBLENBcUZwQkE7SUFyRlNBLFdBQUFBLFdBQVdBLEVBQUNBLENBQUNBO1FBRXRCQyxXQUFZQSxRQUFRQTtZQUNuQkMsMkNBQU1BLENBQUFBO1lBQ05BLCtDQUFRQSxDQUFBQTtZQUNSQSx1Q0FBSUEsQ0FBQUE7UUFDTEEsQ0FBQ0EsRUFKV0Qsb0JBQVFBLEtBQVJBLG9CQUFRQSxRQUluQkE7UUFKREEsSUFBWUEsUUFBUUEsR0FBUkEsb0JBSVhBLENBQUFBO1FBR1VBLG1CQUFPQSxHQUEyQkEsRUFBRUEsQ0FBQUE7UUFHL0NBO1lBS0NFLHFCQUFZQSxDQUFpQkE7Z0JBSHJCQyxTQUFJQSxHQUFpQ0EsRUFB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QUFDQTtnQkFFVkEsSUFBSUEsR0FBR0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsQ0FBQ0E7Z0JBRWpDQSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxNQUFNQTtvQkFDTEEsWUFBVUEsSUFBSUEsWUFBU0E7b0JBQ3ZCQSxZQUFVQSxJQUFJQSxRQUFLQSxDQUFDQTtZQUNsQ0EsQ0FBQ0E7WUFFU1IsNEJBQU1BLEdBQWhCQSxVQUFpQkEsSUFBWUE7Z0JBQzVCUyxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUMzQkEsQ0FBQ0E7WUFDRlQsa0JBQUNBO1FBQURBLENBQUNBLEFBeEVERixJQXdFQ0E7UUF4RVlBLHVCQUFXQSxjQXdFdkJBLENBQUFBO0lBQ0ZBLENBQUNBLEVBckZTRCxXQUFXQSxHQUFYQSxjQUFXQSxLQUFYQSxjQUFXQSxRQXFGcEJBO0FBQURBLENBQUNBLEVBckZNLEVBQUUsS0FBRixFQUFFLFFBcUZSIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlIGhvLmNsYXNzbG9hZGVyIHtcblxuXHRleHBvcnQgZW51bSBMb2FkVHlwZSB7XG5cdFx0U0NSSVBULFxuXHRcdEZVTkNUSU9OLFxuXHRcdEVWQUxcblx0fVxuXG5cblx0ZXhwb3J0IGxldCBtYXBwaW5nOiB7W2tleTpzdHJpbmddOiBzdHJpbmd9ID0ge31cblxuXG5cdGV4cG9ydCBjbGFzcyBDbGFzc0xvYWRlciB7XG5cblx0XHRwcml2YXRlIGNvbmY6IElMb2FkZXJDb25maWcgPSA8SUxvYWRlckNvbmZpZz57fTtcblx0XHRwcml2YXRlIGNhY2hlOiB7W2tleTpzdHJpbmddOiBGdW5jdGlvbn0gPSB7fVxuXG5cdFx0Y29uc3RydWN0b3IoYz86IElMb2FkZXJDb25maWcpIHtcblx0XHRcdHRoaXMuY29uZiA9IG5ldyBMb2FkZXJDb25maWcoYyk7XG5cdFx0fVxuXG5cdFx0bG9hZChhcmc6IElMb2FkQXJndW1lbnRzKSB7XG5cdFx0XHRzd2l0Y2godGhpcy5jb25mLmxvYWRUeXBlKSB7XG5cdFx0XHRcdGNhc2UgTG9hZFR5cGUuU0NSSVBUOlxuXHRcdFx0XHRcdHJldHVybiB0aGlzLmxvYWRfc2NyaXB0KGFyZyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgTG9hZFR5cGUuRlVOQ1RJT046XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMubG9hZF9mdW5jdGlvbihhcmcpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIExvYWRUeXBlLkVWQUw6XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMubG9hZF9ldmFsKGFyZyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cHJvdGVjdGVkIGxvYWRfc2NyaXB0KGFyZzogSUxvYWRBcmd1bWVudHMpOiBQcm9taXNlT2ZDbGFzc2VzIHtcblx0XHRcdHJldHVybiBuZXcgaG8ucHJvbWlzZS5Qcm9taXNlPHR5cGVvZiBTdG9yZSwgYW55PigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IHNyYyA9IGFyZy51cmw7XG4gICAgICAgICAgICAgICAgbGV0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgICAgICAgICAgICAgIHNjcmlwdC5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYodHlwZW9mIHRoaXMuZ2V0KG5hbWUpID09PSAnZnVuY3Rpb24nKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzLmdldChuYW1lKSk7XG4gICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChgRXJyb3Igd2hpbGUgbG9hZGluZyBTdG9yZSAke25hbWV9YClcbiAgICAgICAgICAgICAgICB9LmJpbmQodGhpcyk7XG4gICAgICAgICAgICAgICAgc2NyaXB0LnNyYyA9IHNyYztcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gICAgICAgICAgICB9KTtcblx0XHR9XG5cblx0XHRwcm90ZWN0ZWQgbG9hZF9mdW5jdGlvbihhcmc6IElMb2FkQXJndW1lbnRzKTogUHJvbWlzZU9mQ2xhc3NlcyB7XG5cblx0XHR9XG5cblx0XHRwcm90ZWN0ZWQgbG9hZF9ldmFsKGFyZzogSUxvYWRBcmd1bWVudHMpOiBQcm9taXNlT2ZDbGFzc2VzIHtcblxuXHRcdH1cblxuXHRcdHByb3RlY3RlZCBnZXRQYXJlbnROYW1lKHVybDogc3RyaW5nKTogaG8ucHJvbWlzZS5Qcm9taXNlPHN0cmluZywgYW55PiB7XG5cblx0XHR9XG5cblx0XHRwcm90ZWN0ZWQgcGFyc2VQYXJlbnRGcm9tU291cmNlKHNyYzogc3RyaW5nKTogc3RyaW5nIHtcblxuXHRcdH1cblxuXHRcdHByb3RlY3RlZCByZXNvbHZlVXJsKG5hbWU6IHN0cmluZyk6IHN0cmluZyB7XG5cdFx0XHRpZighIW1hcHBpbmdbbmFtZV0pXG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hcHBpbmdbbmFtZV07XG5cblx0XHRcdGlmKHRoaXMuY29uZi51c2VyRGlyKSB7XG4gICAgICAgICAgICAgICAgbmFtZSArPSAnLicgKyBuYW1lLnNwbGl0KCcuJykucG9wKCk7XG4gICAgICAgICAgICB9XG5cblx0XHRcdG5hbWUgPSBuYW1lLnNwbGl0KCcuJykuam9pbignLycpO1xuXG5cdFx0XHRyZXR1cm4gdGhpcy51c2VNaW4gP1xuICAgICAgICAgICAgICAgIGBzdG9yZXMvJHtuYW1lfS5taW4uanNgIDpcbiAgICAgICAgICAgICAgICBgc3RvcmVzLyR7bmFtZX0uanNgO1xuXHRcdH1cblxuXHRcdHByb3RlY3RlZCBleGlzdHMobmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XG5cdFx0XHRyZXR1cm4gISF0aGlzLmNhY2hlW25hbWVdO1xuXHRcdH1cblx0fVxufVxuIl19